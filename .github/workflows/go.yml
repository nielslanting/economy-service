name: Go
on: [push, release]
jobs:
  build_sdk_ue4_windows:
    name: Build Unreal Engine 4 SDK
    runs-on: windows-latest
    steps:
    
    - name: Check out code
      uses: actions/checkout@v1  
                
    - name: SDK Unreal Convert
      run: |
        mkdir cornerstone
        mkdir cornerstone\proto
        mkdir cornerstone\dist
        node sdk/ue4/convert.js --input api/proto/v1/economy_service.proto --output cornerstone/proto/economy_service.proto
        
    - name: Print output file
      run: |
        cat cornerstone/proto/economy_service.proto
        
    - name: SDK Unreal Generate 
      run: |
        cp ./sdk/ue4/config.yml ./cornerstone/config.yml
        cd ./cornerstone
        curl -OL https://github.com/GameComponent/infraworld-cornerstone/releases/download/1.0/infraworld-cornerstone.jar
        java -jar infraworld-cornerstone.jar
        
#   build:
#     name: Build
#     runs-on: ubuntu-latest
#     steps:

#     - name: Set up Go 1.12
#       uses: actions/setup-go@v1
#       with:
#         go-version: 1.12
#       id: go

#     - name: Check out code into the Go module directory
#       uses: actions/checkout@v1  
      
#     - name: Test workflow
#       run: |
#         echo "GOPATH"
#         echo $GOPATH
#         echo "GOROOT"
#         echo $GOROOT
        
#     - name: Generate
#       env:
#         GO111MODULE: 'off'
#       run: |
#         curl -OL https://github.com/protocolbuffers/protobuf/releases/download/v3.9.1/protoc-3.9.1-linux-x86_32.zip
#         unzip protoc-3.9.1-linux-x86_32.zip -d protoc3
#         sudo mv protoc3/bin/* /usr/local/bin/
#         sudo mv protoc3/include/* /usr/local/include/
#         export PATH=$PATH:/usr/local/bin
#         export PATH=$PATH:/usr/local/include
#         export GOPATH=$HOME/go
#         export PATH=$PATH:$GOPATH
#         export PATH=$PATH:$GOPATH/bin
#         export PATH=$PATH:$GOROOT/bin
#         go get -v github.com/grpc-ecosystem/grpc-gateway/protoc-gen-grpc-gateway
#         go get -v github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger
#         go get -v github.com/golang/protobuf/protoc-gen-go
#         make api
        
#     - name: Build
#       run: |
#         go get -v ./...
#         make build
        
#     - name: Release Windows x64
#       uses: "JasonEtco/upload-to-release@master"
#       env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#       with:
#         args: "./bin/server/server_windows_x86_64.exe application/octet-stream"
        
#     - name: Release Linux x64
#       uses: "JasonEtco/upload-to-release@master"
#       env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#       with:
#         args: "./bin/server/server_linux_x86_64 application/octet-stream"
        
#     - name: Release Darwin x64
#       uses: "JasonEtco/upload-to-release@master"
#       env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#       with:
#         args: "./bin/server/server_darwin_x86_64 application/octet-stream"
        
#     - name: Release Dockerhub
#       uses: "pangzineng/Github-Action-One-Click-Docker@master"
#       env:
#         DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
#         DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
